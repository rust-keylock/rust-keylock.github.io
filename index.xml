<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust-keylock</title>
    <link>https://rust-keylock.github.io/</link>
    <description>Recent content on rust-keylock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 13 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://rust-keylock.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Announcing v0.11.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.11.0/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.11.0/</guid>
      <description>Release 0.11.0 is out!
The first highlight of this release, is that the Desktop application is implemented using JavaFX instead of ScalaFX. Along with that, there were user experience improvements and UI fixes.
The second highlight is that we recovered the support for older Android versions. Therefore, the minimum supported API level is 16 (4.1.2 is tested as a minimum version).
Changelist  UI now uses plain JavaFX instead of ScalaFX.</description>
    </item>
    
    <item>
      <title>Announcing v0.9.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.9.0/</link>
      <pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.9.0/</guid>
      <description> Release 0.9.0 is out!
The main feature of this release is the support for synchronization via Dropbox accounts!
Affected repositories rust-keylock-lib
rust-keylock-ui
rust-keylock-android
Changelist  Synchronization via Dropbox. By using rust-bcrypt, we were able to ditch the unmaintained rust-crypto. Increased the bcrypt cost. Applied clippy proposals. Using the latest j4rs and its maven dependencies download-during-build feature, the size of the rust-keylock-ui crate got much smaller.  </description>
    </item>
    
    <item>
      <title>Synchronizing with Dropbox</title>
      <link>https://rust-keylock.github.io/wiki/sync-with-dropbox/</link>
      <pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/wiki/sync-with-dropbox/</guid>
      <description>Since version 0.9.0, the rust-keylock has the ability to synchronize passwords and data using Dropbox.
Setup In order to allow the rust-keylock to access your Dropbox account, you should create a Dropbox authentication token.
The following steps should be done once per device. For example, if you use rust-keylock in your desktop and in your Android device, you should acquire one authentication token for your desktop and one for your Android phone.</description>
    </item>
    
    <item>
      <title>Announcing v0.8.2</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.8.2/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.8.2/</guid>
      <description>Release 0.8.2 is out!
This release includes important nextcloud sync fixes and core implementation improvements, allowing to move forward to the next release that is planned to contain synchronization with Dropbox accounts!
Affected repositories rust-keylock-lib
rust-keylock-ui
Changelist rust-keylock-lib:
 Corrected nextcloud sync issues. Use tokio for tasks and loops where possible. Do not allow manual nextcloud synchronization.  rust-keylock-ui:
 Filter improvements Using the latest j4rs. No need to set up the LD_LIBRARY_PATH or JAVA_HOME any more.</description>
    </item>
    
    <item>
      <title>AUR availability</title>
      <link>https://rust-keylock.github.io/blog/aur/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/aur/</guid>
      <description>Since version 0.8.1, arch users may find the rust-keylock-ui in AUR.
Enjoy!</description>
    </item>
    
    <item>
      <title>Announcing v0.8.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.8.0/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.8.0/</guid>
      <description> Release 0.8.0 is out!
This release includes important security fixes and desktop UI improvements.
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
rust-keylock-ui
Changelist rust-keylock-lib:
 Correct the bcrypt key expansion using HKDF. Encrypt the SHA3 hash value Use the maintained fork of rust-crypto. Error messages and logging improvements.  rust-keylock-ui:
 Windows sizing improvements. Several UI enhancements. Fixed &amp;ldquo;home not found&amp;rdquo; issue of java logging in windows.  </description>
    </item>
    
    <item>
      <title>Announcing v0.7.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.7.0/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.7.0/</guid>
      <description>Release 0.7.0 is out!
rust-keylock-ui and rust-keylock-android now use the j4rs rust crate for the Java &amp;lt;-&amp;gt; Rust communication, allowing to ditch the JNA dependency. Using j4rs in Android is pretty important for publishing the app in the F-Droid as well, since there is no need to carry the JNA pre-built binaries any more.
Moreover, ther is now asynchronous support provided by the rust-keylock-lib. It is being used by both rust-keylock-ui and rust-keylock-android.</description>
    </item>
    
    <item>
      <title>Announcing v0.6.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.6.0/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.6.0/</guid>
      <description> Release 0.6.0 is out!
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
rust-keylock-ui
Changelist Usability improvements:
 Added a URL field in the password entries Support copy for the URL, username and password fields  </description>
    </item>
    
    <item>
      <title>Announcing v0.5.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.5.0/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.5.0/</guid>
      <description>Release 0.5.0 is out!
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
rust-keylock-ui
Changelist  Implemented automated backups locally
 Added Warning when about to overwrite an existing file while exporting locally
 The desctiprion of the password entries is now a text area
  Bugfixes  Fix: Exception in thread &amp;ldquo;JavaFX Application Thread&amp;rdquo; java.lang.NumberFormatException: For input string: &amp;ldquo;&amp;rdquo;
 Stop the inactivity timer after first time that the user is logged out because of inactivity</description>
    </item>
    
    <item>
      <title>Announcing v0.4.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.4.0/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.4.0/</guid>
      <description> Release 0.4.0 is out!
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
rust-keylock-ui
Changelist  Synchronize with (Next/Own)cloud
 Using internal configuration and added configuration dialogs
 Use sec_str in Windows as well
  Bugfixes  Fixed wrong AES key size
 Fixed Windows shell cleaning
 Fixed focus lost when applying filter on Android
 Fixed showing large texts on alerts/messages
  Code and infrastructure improvements  Sign the apk files that are published by Travis CI  </description>
    </item>
    
    <item>
      <title>Synchronizing with Nextcloud</title>
      <link>https://rust-keylock.github.io/wiki/sync-with-nextcloud/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/wiki/sync-with-nextcloud/</guid>
      <description>Since version 0.4.0, the rust-keylock has the ability to synchronize passwords and data over a Nextcloud (or Owncloud) server.
Setup From the main menu, navigate to the Configuration and fill the fields.
The Server URL, the Username and the Password should be filled in order to assume correct configuration.
Self-signed certificates If your Nextcloud server is accessed via HTTPS using a self signed certificate, you need to:
 Check the self-signed certificate checkbox in the rust-keylock &amp;ldquo;Configuration&amp;rdquo; view.</description>
    </item>
    
    <item>
      <title>Announcing v0.3.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.3.0/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.3.0/</guid>
      <description>Release 0.3.0 is out!
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
rust-keylock-ui
Changelist  Data Integrity checks:
Protection against data corruption using SHA-3 hashing with 512 bits output.
 Filtering mechanism:
Ability to filter the list of passwords to improve the user experience.
 Timeout mechanism:
Enhance security by automatically locking after inactivity period.
  Bugfixes  Fixed merging when importing entries:
The identical entries were not recognized, resulting to duplicate entries after importing</description>
    </item>
    
    <item>
      <title>v0.3.0 contents</title>
      <link>https://rust-keylock.github.io/blog/next-release-contents-0-3-0/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/next-release-contents-0-3-0/</guid>
      <description> Upcoming release contents
This post is about announcing what the next release of rust-keylock will include.
New features  Inactivity timeout mechanism Filtering mechanism
Ability to filter the list of passwords to improve the user experience when the saved passwords are too many.
 Integrity checks
Use cryptographic checksums to imply about stored data integrity
  Code and infrastructure improvements  Replace the deprecated library rustc_serialize with serde Provide release artifacts for all the rust-keylock subprojects in GitHub  Plus &amp;hellip; Bugfixes </description>
    </item>
    
    <item>
      <title>Announcing v0.2.1</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.2.1/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.2.1/</guid>
      <description>Release 0.2.1 is out!
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
Changelist  Handle decryption errors during the initialization and don&amp;rsquo;t panic Change the name of the shell binary from rust_keylock to rust-keylock Keep the passwords encrypted in the memory Keep the encryption/decryption keys in safe memory location  Bugfixes  rust-keylock-lib
 Panic when providing a very big number during authorization: panicked at &amp;lsquo;assertion failed: salt.len() == 16&amp;rsquo;  rust-keylock-android</description>
    </item>
    
    <item>
      <title>Announcing v0.1.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.1.0/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.1.0/</guid>
      <description>The first release of rust-keylock is out!
Release links: rust-keylock-lib
rust-keylock-shell
rust-keylock-android</description>
    </item>
    
    <item>
      <title>F.A.Q.</title>
      <link>https://rust-keylock.github.io/faq/rkl/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/faq/rkl/</guid>
      <description>What is the rust-keylock? rust-keylock is a password manager.
What is the license? rust-keylock is a free software, licensed under GPLv3.
Where is the code? The code is hosted on GitHub.
Why so many repos? The idea is that there is a core rust-keylock library that handles the core application logic, whereas the interaction with the Users is done via libraries and apps that have presentation responsibilities.
Therefore, apart from the core library repo, the rest are presentation libraries.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://rust-keylock.github.io/about/rkl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/about/rkl/</guid>
      <description>General rust-keylock is a password manager and its goals are to be:
 Secure Simple to use Portable Extensible  The core logic is written in Rust, but the presentation/User interaction parts are in different languages.
Warning The project has not yet received any formal/official security reviews. Use it at your own risk.
Features Security  The data is locked with a user-defined master password, using bcrypt password hashing. Encryption using AES with CTR mode.</description>
    </item>
    
    <item>
      <title>Download and Install</title>
      <link>https://rust-keylock.github.io/download/rkl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/download/rkl/</guid>
      <description>rust-keylock is delivered as a desktop app, an Android app and a shell app.
Here is how you can install what you are interested in:
Desktop There are several choices for desktop users:
Snap Install the rust-keylock-ui from the Snap Store
Arch User Repository Arch users may find the application in AUR.
Cargo Provided that Rust and Java 11 or higher are installed in your system, you may use cargo to build and install rust-keylock-ui:</description>
    </item>
    
  </channel>
</rss>