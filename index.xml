<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust-keylock</title>
    <link>https://rust-keylock.github.io/</link>
    <description>Recent content on rust-keylock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 03 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://rust-keylock.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Announcing v0.3.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.3.0/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.3.0/</guid>
      <description>Release 0.3.0 is out!
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
rust-keylock-ui
Changelist  Data Integrity checks:
Protection against data corruption using SHA-3 hashing with 512 bits output.
 Filtering mechanism:
Ability to filter the list of passwords to improve the user experience.
 Timeout mechanism:
Enhance security by automatically locking after inactivity period.
  Bugfixes  Fixed merging when importing entries:
The identical entries were not recognized, resulting to duplicate entries after importing</description>
    </item>
    
    <item>
      <title>v0.3.0 contents</title>
      <link>https://rust-keylock.github.io/blog/next-release-contents-0-3-0/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/next-release-contents-0-3-0/</guid>
      <description> Upcoming release contents
This post is about announcing what the next release of rust-keylock will include.
New features  Inactivity timeout mechanism Filtering mechanism
Ability to filter the list of passwords to improve the user experience when the saved passwords are too many.
 Integrity checks
Use cryptographic checksums to imply about stored data integrity
  Code and infrastructure improvements  Replace the deprecated library rustc_serialize with serde Provide release artifacts for all the rust-keylock subprojects in GitHub  Plus &amp;hellip; Bugfixes </description>
    </item>
    
    <item>
      <title>Announcing v0.2.1</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.2.1/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.2.1/</guid>
      <description>Release 0.2.1 is out!
Affected repositories rust-keylock-lib
rust-keylock-shell
rust-keylock-android
Changelist  Handle decryption errors during the initialization and don&amp;rsquo;t panic Change the name of the shell binary from rust_keylock to rust-keylock Keep the passwords encrypted in the memory Keep the encryption/decryption keys in safe memory location  Bugfixes  rust-keylock-lib
 Panic when providing a very big number during authorization: panicked at &amp;lsquo;assertion failed: salt.len() == 16&amp;rsquo;  rust-keylock-android</description>
    </item>
    
    <item>
      <title>Announcing v0.1.0</title>
      <link>https://rust-keylock.github.io/blog/announcing-v0.1.0/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/blog/announcing-v0.1.0/</guid>
      <description>The first release of rust-keylock is out!
Release links: rust-keylock-lib
rust-keylock-shell
rust-keylock-android</description>
    </item>
    
    <item>
      <title>F.A.Q.</title>
      <link>https://rust-keylock.github.io/faq/rkl/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/faq/rkl/</guid>
      <description>What is the rust-keylock? rust-keylock is a password manager.
What is the license? rust-keylock is a free software, licensed under GPLv3.
Where is the code? The code is hosted on GitHub.
Why so many GitHub repos? The idea is that there is a core rust-keylock library that handles the core application logic, whereas the interaction with the Users is done via libraries that have presentation responsibilities.
Therefore, apart from the core library repo, the rest are presentation libraries.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://rust-keylock.github.io/about/rkl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/about/rkl/</guid>
      <description>rust-keylock is a password manager and its goals are to be:
 Secure Simple to use Portable Extensible  The core logic is written in Rust, but the presentation/User interaction parts are in different languages.
Features Security  The data is locked with a user-defined master password, using bcrypt password hashing Encryption using AES with CTR mode Data integrity checks with SHA3 (Keccak) Encrypted bytes blending Passwords are kept encrypted in memory Encryption keys on runtime are stored in safe, non-swappable memory Encryption keys change upon saving, even if the user master password remains the same.</description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://rust-keylock.github.io/download/rkl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rust-keylock.github.io/download/rkl/</guid>
      <description>rust-keylock is delivered as a desktop app, an Android app and a shell app.
Here is how you can install what you are interested in:
Desktop The desktop application can currently run on Linux (x64) and Windows (x64).
Prerequisites Java 8 (or later) should be installed on your system.
Installation and Usage  Download the .zip or .tar.gz file.
 Both compressed files contain the same application, so you may select whichever suits your environment.</description>
    </item>
    
  </channel>
</rss>